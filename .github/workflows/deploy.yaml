name: Build and Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      ECR_REPOSITORY: transit-ingestion
      ECS_CLUSTER: transit-cluster-1
      ECS_SERVICE: transit-service
      TASK_FAMILY: transit-ingestion-task

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        id: build-image
        run: |
          # Create a unique image tag using the commit SHA (or any unique identifier)
          IMAGE_TAG=${GITHUB_SHA::7}
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

          # Build the image for linux/amd64
          docker build --platform linux/amd64 -t $ECR_REPOSITORY:$IMAGE_TAG .

          # Tag the image with its unique tag and as latest
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest

          # Push both tags to ECR
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest

      - name: Update ECS Task Definition
        id: task-def
        run: |
          # Construct the full ECR image URI using the pushed image tag
          IMAGE_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG"
          echo "Using image URI: $IMAGE_URI"

          # Replace placeholders in ecs_task_def.json with actual values.
          # The file contains:
          #   "arn:aws:iam::ACCOUNT_ID:role/ECS_TASK_EXECUTION_ROLE"
          #   "ECR_REPOSITORY_URI:latest"
          #   "awslogs-region": "AWS_REGION"
          sed -e "s/ACCOUNT_ID/${AWS_ACCOUNT_ID}/g" \
              -e "s/ECS_TASK_EXECUTION_ROLE/${{ secrets.ECS_TASK_EXECUTION_ROLE }}/g" \
              -e "s|ECR_REPOSITORY_URI|${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}|g" \
              -e "s/AWS_REGION/${AWS_REGION}/g" \
              ecs_task_def.json > ecs_task_def_updated.json

          echo "Updated ECS Task Definition:"
          cat ecs_task_def_updated.json

          # Register the new task definition with ECS
          aws ecs register-task-definition --cli-input-json file://ecs_task_def_updated.json

      - name: Deploy to ECS Service
        run: |
          # Fetch the latest task definition revision ARN for the specified task family
          TASK_DEF_ARN=$(aws ecs describe-task-definition --task-definition $TASK_FAMILY --query "taskDefinition.taskDefinitionArn" --output text)
          echo "Latest task definition ARN: $TASK_DEF_ARN"
          
          # Update the ECS service to use the new task definition revision.
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service $ECS_SERVICE \
            --task-definition $TASK_DEF_ARN
